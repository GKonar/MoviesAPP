### GET ALL SERIALS
GET http://localhost:3001/serials?page=0
Accept: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}
###

GET http://localhost:3001/serials/5bb6680fe4771314e9253a28
Accept: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});

client.test("Headers option exists", function() {
  client.assert(response.body.hasOwnProperty("title"), "Cannot find 'title' option in response");
});
%}
###

DELETE http://localhost:3001/serials/5bb4f53169c3a93bae3924d7
Accept: application/json

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###

POST http://localhost:3001/serials/
Content-Type: application/json

{
  "title":"Iron Fist",
  "author":"Scott Buck",
  "seasons":2,
  "episodes":23,
  "releaseDate":"2017-03-17"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});

client.test("Headers option exists", function() {
  client.assert(response.body.hasOwnProperty("title"), "Cannot find 'headers' option in response");
});
%}
###

PUT http://localhost:3001/serials/5bb6680fe4771314e9253a28
Content-Type: application/json

{
  "title":"Luke Cage(updated)",
  "author":"Cheo Hodari Coker(updated)",
  "seasons":2,
  "episodes":26,
  "releaseDate":"2016-02-08"
}

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  var type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});
%}

###

# For a quick start check out our HTTP Requests collection (Tools|HTTP Client|Open HTTP Requests Collection).
#
# Following HTTP Request Live Templates are available:
# * 'gtrp' and 'gtr' create a GET request with or without query parameters;
# * 'ptr' and 'ptrp' create a POST request with a simple or parameter-like body;
# * 'mptr' and 'fptr' create a POST request to submit a form with a text or file field (multipart/form-data);